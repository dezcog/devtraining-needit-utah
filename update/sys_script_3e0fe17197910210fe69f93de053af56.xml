<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_58872_needit_my_custom_table</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>updateTotals</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	// Add your code here

	current.total_hours = current.u_data_request1_hours + current.u_data_request2_hours;
	
	// Get the variables out of the form
	var u_datarequest1       = current.u_data_request1;
	var u_datarequest1_hours = current.u_data_request1_hours;
	var u_datarequest2       = current.u_data_request2;
	var u_datarequest2_hours = current.u_data_request2_hours;

	// Lookup the rates for the requested skills
	var gr = new GlideRecord('x_58872_needit_ratecard');
	gr.addQuery('skillset', u_datarequest1);
	gr.query();
	if (gr.getRowCount() == 1)
		{
			gr.next();
		var skillset          = gr.skillset;
		var dailyRate         = gr.dailyrate;
		var discountDailyRate = gr.discountdailyrate;

        // Calculate the cost
		var cost = parseFloat(dailyRate) * parseInt(u_datarequest1_hours);
		}
	
	gr = new GlideRecord('x_58872_needit_ratecard');
	gr.addQuery('skillset', u_datarequest2);
	gr.query();
	if (gr.getRowCount() == 1)
		{
			gr.next();
			skillset          = gr.skillset;
			dailyRate         = gr.dailyrate;
			discountDailyRate = gr.discountdailyrate;
			
        // Add the cost
		cost = cost + parseFloat(dailyRate) * parseInt(u_datarequest2_hours);
		}	

    // Store the cost
	current.cost = cost;
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-04-02 02:23:29</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>3e0fe17197910210fe69f93de053af56</sys_id>
        <sys_mod_count>4</sys_mod_count>
        <sys_name>updateTotals</sys_name>
        <sys_overrides/>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy/>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sys_script_3e0fe17197910210fe69f93de053af56</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-04-10 03:26:14</sys_updated_on>
        <template>total_hours=^EQ</template>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=3e0fe17197910210fe69f93de053af56"/>
</record_update>
